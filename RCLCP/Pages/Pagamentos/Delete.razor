@page "/pagamentos/delete"


<PageTitle>Excluir</PageTitle>

<h1>Excluir Pagamento</h1>

<h3>Tem certeza que deseja excluir?</h3>
<div>
    
    <hr />
    @if (Pagamento is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <EditForm method="post" Model="Pagamento" OnValidSubmit="DeletePagamento" FormNome="delete" Enhance>
            <MudCard>
                <MudCardContent>
                    <MudText><b>Data Pagamento: </b>@Pagamento.DataPagamento?.ToString("dd/MM/yyyy")</MudText>
                    <MudDivider />
                    <MudText><b>Despesa: </b>@Pagamento.Despesa!.Nome</MudText>
                    <MudDivider />
                    <MudText><b>Valor Pagar: </b>@Pagamento.ValorPagar.ToString("N2")</MudText>
                    <MudDivider />
                    <MudText><b>Valor Pago: </b>@Pagamento.ValorPago.ToString("N2")</MudText>
                    <MudDivider />
                    <MudText><b>Tipo de Pagamento: </b>@Pagamento.TipoPagamento.ToString()</MudText>
                    <MudDivider />
                    <MudText><b>Débito Automático?: </b>@(@Pagamento.DebitoAutomatico == true ? "Sim" : "Não")</MudText>
                    <MudDivider />
                    <MudText><b>Conta já foi paga?: </b>@(@Pagamento.EstaPago == true ? "Sim" : "Não")</MudText>
                    <MudDivider />
                </MudCardContent>
                <MudCardActions Class="pa-8 d-flex flex-wrap gap-4 justify-space-between" Outlined="true">
                        <MudButton ButtonType="ButtonType.Button"  HRef="@($"/pagamentos/edit?id={Pagamento.PagamentoId}")" Variant="Variant.Filled" Color="Color.Primary" Style="width:110px">Editar</MudButton>            
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Secondary" Style="width:110px">Excluir</MudButton>              
                        <MudButton ButtonType="ButtonType.Button" OnClick="NavigateToIndexPagamento" Variant="Variant.Outlined" Color="Color.Secondary"  Style="width:110px">Retornar</MudButton>  
                </MudCardActions>
            </MudCard>
        </EditForm>
            }
</div>

@code {

    Pagamento? Pagamento;

    [SupplyParameterFromQuery]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Pagamento = await pagamentoRepositorio.GetPagamentoComDespesaAsync(id);

        if (Pagamento is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeletePagamento()
    {
        await pagamentoRepositorio.DeletePagamentoAsync(Pagamento);
        NavigationManager.NavigateTo("/pagamentos");
    }

    public void NavigateToIndexPagamento()
    {
        NavigationManager.NavigateTo("/pagamentos");
    }
}
